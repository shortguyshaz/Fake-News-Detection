# -*- coding: utf-8 -*-
"""Fake_News_TF-IDF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12km_WpnDCFFIuW3-4ALhahJC3L26F7kK
"""

import numpy as np
import pandas as pd
import itertools

from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

from google.colab import drive
drive.mount('/content/gdrive')

train = pd.read_csv('/content/gdrive/My Drive/news.csv')
df = train

df

#Get Shape
df.shape

df.describe()

#Get labels
labels = df.label
labels.head()

#Split the dataset into training and testing sets
x_train,x_test,y_train,y_test=train_test_split(df['text'], labels, test_size=0.2, random_state=7)

#Initialise a TfidfVectorizer
tfidf_vectorizer = TfidfVectorizer(stop_words = 'english', max_df=0.7)

#Fit and transform training set, transform testing set
tfidf_train = tfidf_vectorizer.fit_transform(x_train) 
tfidf_test = tfidf_vectorizer.transform(x_test)

#Initialize a PassiveAgressiveClassifier
pac = PassiveAggressiveClassifier(max_iter = 50)
pac.fit(tfidf_train, y_train)

#Predict on the test set and calculate accuracy
y_pred = pac.predict(tfidf_test)
score = accuracy_score(y_test, y_pred)
print(f'Accuracy: {round(score * 100, 2)}%')

#Build confusion matrix
confusion_matrix(y_test, y_pred, labels = ['FAKE', 'REAL'])